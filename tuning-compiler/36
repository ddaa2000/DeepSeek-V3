### RISCV Inst Description
ADD - Add
Description:
ADD adds the values in registers rs1 and rs2 and writes the
result to register rd.This instruction is part of the RISC-V
Base ISA (RV32I/RV64I).
Syntax:
add rd, rs1, rs2
Operation:
rd = rs1 + rs2
Execution privilege:
Machine mode, Supervisor mode, User mode
Exceptions:
None (ADD does not cause exceptions)
Instruction format:
31-25 24-20 19-15 14-12 11-7 6-0
funct7 rs2 rs1 funct3 rd opcode
0000000 XXXXX XXXXX 000 XXXXX 0110011
Encoding details:
funct7 = 0000000
funct3 = 000
opcode = 0110011 (OP)
instruction type:
Base


### TableGen
// ------ RISCVInstrInfo.td ------ //
def ADD : ALU_rr<0b0000000, 0b000, "add", Commutable=1>,
Sched<[WriteIALU, ReadIALU, ReadIALU]>;
let hasSideEffects = 0, mayLoad = 0, mayStore = 0 in
class ALU_rr<bits<7> funct7, bits<3> funct3, string
opcodestr, bit Commutable = 0>
: RVInstR<funct7, funct3, OPC_OP, (outs GPR:$rd),
(ins GPR:$rs1, GPR:$rs2), opcodestr, "$rd, $rs1, $rs2"> {
let isCommutable = Commutable;
}
/ ------ RISCVInstrFormats.td ------ //
class RVInstR<bits<7> funct7, bits<3> funct3, RISCVOpcode
opcode, dag outs,
dag ins, string opcodestr, string argstr>
: RVInstRBase<funct3, opcode, outs, ins, opcodestr,
argstr> {
let Inst{31-25} = funct7;
}